package eu.trentorise.game.model
import eu.trentorise.game.core.Utility;

rule "donation action"
when
	Action ($id : id == "donation")
	InputData($reduceCoin : data["reduceCoin"] != null, 
	          $reuseCoin : data["reuseCoin"] != null,
	          $recycleCoin : data["recycleCoin"] != null)
	Game( $gameId: id)
	Player($playerId : id) 

	$reuseCoinCounter : PointConcept(name == "reuseCoin")
    $recycleCoinCounter : PointConcept(name == "recycleCoin")
	$reduceCoinCounter : PointConcept(name == "reduceCoin")
then
	
	double reuseCoin = (Double) $reuseCoin;
	double reduceCoin = (Double) $reduceCoin;
	double recycleCoin = (Double) $recycleCoin;
		
	double reuseCoinValue = $reuseCoinCounter.getScore() + (Double) $reuseCoin;
	if(reuseCoinValue >= 0) {
		modify($reuseCoinCounter) { setScore( reuseCoinValue ) };
	} else {
	    modify($reuseCoinCounter) { setScore(0.0) };
		utils.log("ATTENTION try to decrement reuseCoinValue less than zero");
	}
	
	double recycleCoinValue = $recycleCoinCounter.getScore() + (Double) $recycleCoin;
	if(recycleCoinValue >= 0) {
		modify($recycleCoinCounter) { setScore( recycleCoinValue ) };
	} else {
		modify($recycleCoinCounter) { setScore(0d) };
		utils.log("ATTENTION try to decrement recycleCoin less than zero");
	}
	
	double reduceCoinValue = $reduceCoinCounter.getScore() + (Double) $reduceCoin;
	if(reduceCoinValue >= 0) {
		modify($reduceCoinCounter) { setScore( reduceCoinValue ) };
	} else {
		modify($reduceCoinCounter) { setScore(0d) };
		utils.log("ATTENTION try to decrement reduceCoin less than zero");
	}
	utils.log('donation rule executed');
end